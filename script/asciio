#!/usr/bin/env perl

package main ;

use strict;
use warnings;

use Glib ':constants';
use Gtk3 -init;
Gtk3->init;

use App::Asciio::GTK::Asciio ;
use App::Asciio::Server ;

#-----------------------------------------------------------------------------

my $window = Gtk3::Window->new('toplevel');
my $notebook = Gtk3::Notebook->new;
$notebook->set_can_focus(FALSE);
$notebook->set_scrollable(TRUE) ;

my ($asciio, $web_port) = asciio_init() ;

# :TODO: If the first tab is deleted by the user, the web service will be damaged.need to fix.
# The reference of asciios[0] is retained. Therefore, an error occurs when the tab is deleted.
# need to fix
App::Asciio::Server::start_web_server($asciio, $web_port // 4444) ; 

Gtk3->main() ;

#-----------------------------------------------------------------------------

sub asciio_init
{
$window->set_title("asciio");
$window->set_default_size(1000, 1000) ;
$window->signal_connect("destroy", sub { exit(0); });

$window->add($notebook);

my @asciios ;
push @asciios, my $asciio = new App::Asciio::GTK::Asciio($window, 50, 25, $notebook, undef, \@ARGV) ;

my ($command_line_switch_parse_ok, $command_line_parse_message, $asciio_config)
	= $asciio->ParseSwitches([@ARGV], 0) ;

die "Error: '$command_line_parse_message'!" unless $command_line_switch_parse_ok ;

my ($character_width, $character_height) = $asciio->get_character_size() ;

if(defined $asciio_config->{TARGETS}[0])
	{
	$asciio->run_actions_by_name(['Open', $asciio_config->{TARGETS}[0]]) ;
	
	delete $asciio->{BINDINGS_COMPLETION} ;
	
	$window->set_default_size(@{$asciio->{WINDOW_SIZE}})  if defined $asciio->{WINDOW_SIZE} ;
	}

$asciio->{widget}->set_size_request($asciio->{CANVAS_WIDTH} * $character_width, $asciio->{CANVAS_HEIGHT} * $character_height);
$asciio->set_modified_state(0) ;

if(defined $asciio_config->{SCRIPT})
	{
	require App::Asciio::Scripting ;
	
	App::Asciio::Scripting::run_external_script($asciio, $asciio_config->{SCRIPT}) ;
	}

$window->show_all() ;
$asciio->{widget}->grab_focus() ;
return ($asciio, $asciio_config->{WEB_PORT}) ;
}

#--------------------------------------------------------------------------

